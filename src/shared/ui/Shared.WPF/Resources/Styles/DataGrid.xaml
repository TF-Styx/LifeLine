<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Цвет для выделения при наведении мыши -->
    <SolidColorBrush x:Key="MouseOverBrush" Color="#4C4C4C"/>

    <!-- СТИЛЬ ДЛЯ ЯЧЕЙКИ (DataGridCell) -->
    <!-- Убирает стандартное выделение ячейки синей рамкой при выборе -->
    <Style x:Key="TransparentDataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <!-- Переопределяем шаблон, чтобы убрать рамку фокуса -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Margin="5 0" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- СТИЛЬ ДЛЯ СТРОКИ (DataGridRow) -->
    <Style x:Key="TransparentDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="Red" Text="!" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Триггер на наведение мыши -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
            <!-- Триггер на выделение строки -->
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- СТИЛЬ ДЛЯ ЗАГОЛОВКА СТОЛБЦА (DataGridColumnHeader) -->
    <Style x:Key="TransparentDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <!-- Тонкая линия снизу для разделения -->
        <Setter Property="BorderBrush" Value="Transparent"/>
        <!--#555555-->
        <Style.Triggers>
            <!-- Триггер на наведение мыши -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource MouseOverBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ОСНОВНОЙ СТИЛЬ ДЛЯ ВСЕГО DataGrid -->
    <Style TargetType="{x:Type DataGrid}">
        <!--<Setter Property="RowHeaderStyle" Value="{StaticResource TransparentDataGridColumnHeaderStyle}"/>-->
        <!-- Общие настройки -->
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="White"/>
        <!--<Setter Property="RowHeight" Value="30"/>-->

        <!-- Убираем внутренние линии сетки -->
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>

        <!-- Применяем наши кастомные стили к частям DataGrid -->
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource TransparentDataGridColumnHeaderStyle}"/>
        <Setter Property="RowStyle" Value="{StaticResource TransparentDataGridRowStyle}"/>
        <Setter Property="CellStyle" Value="{StaticResource TransparentDataGridCellStyle}"/>
        <!--</Top>-->
    </Style>

    <Style x:Key="BaseChechBox" TargetType="CheckBox">
        <!-- Устанавливаем цвет текста по умолчанию, чтобы он был виден на темном фоне -->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!-- 1. Внешний вид самого "квадратика" -->
                        <Border x:Name="checkBoxBorder"
                            Grid.Column="0"
                            Width="18"
                            Height="18"
                            Background="Transparent"
                            BorderBrush="White"
                            BorderThickness="1"
                            VerticalAlignment="Center">

                            <!-- 2. Галочка, которая по умолчанию скрыта -->
                            <Path x:Name="checkMark"
                              Data="M 4,8 L 8,12 L 14,5"
                              Stroke="White"
                              StrokeThickness="2"
                              Visibility="Collapsed"
                              Stretch="Uniform"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
                        </Border>

                        <!-- 3. Текст (или другое содержимое) CheckBox -->
                        <ContentPresenter Grid.Column="1"
                                      Margin="5,0,0,0"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      RecognizesAccessKey="True"/>
                    </Grid>

                    <!-- 4. Триггеры для изменения вида в разных состояниях -->
                    <ControlTemplate.Triggers>
                        <!-- При наведении мыши меняем фон рамки -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkBoxBorder" Property="Background" Value="#33FFFFFF" />
                        </Trigger>

                        <!-- Когда CheckBox выбран, показываем галочку -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!-- Если CheckBox отключен (IsEnabled=False), делаем его тусклым -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="checkBoxBorder" Property="Opacity" Value="0.5"/>
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>